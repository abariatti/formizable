/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { FormGroup } from "@angular/forms";
import { MatSlider } from "@angular/material";
import { DynamicFormLayoutService, DynamicFormValidationService, DynamicFormControlComponent, DynamicSliderModel } from "@ng-dynamic-forms/core";
export class DynamicMaterialSliderComponent extends DynamicFormControlComponent {
    /**
     * @param {?} layoutService
     * @param {?} validationService
     */
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.bindId = true;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.customEvent = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicMaterialSliderComponent.decorators = [
    { type: Component, args: [{
                selector: "dynamic-material-slider",
                template: "<ng-container [formGroup]=\"group\">\n\n    <mat-slider #matSlider\n                [color]=\"model.getAdditional('color', 'accent')\"\n                [formControlName]=\"model.id\"\n                [id]=\"bindId ? model.id : null\"\n                [invert]=\"model.getAdditional('invert', false)\"\n                [min]=\"model.min\"\n                [max]=\"model.max\"\n                [ngClass]=\"[getClass('element', 'control'), getClass('grid', 'control')]\"\n                [step]=\"model.step\"\n                [tabIndex]=\"model.tabIndex\"\n                [thumbLabel]=\"model.getAdditional('thumbLabel', true)\"\n                [tickInterval]=\"model.getAdditional('tickInterval', 1)\"\n                [vertical]=\"model.vertical\"\n                (change)=\"onChange($event)\"\n                (input)=\"onCustomEvent($event, 'input')\"></mat-slider>\n\n</ng-container>",
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
DynamicMaterialSliderComponent.ctorParameters = () => [
    { type: DynamicFormLayoutService, },
    { type: DynamicFormValidationService, },
];
DynamicMaterialSliderComponent.propDecorators = {
    "bindId": [{ type: Input },],
    "group": [{ type: Input },],
    "layout": [{ type: Input },],
    "model": [{ type: Input },],
    "blur": [{ type: Output },],
    "change": [{ type: Output },],
    "customEvent": [{ type: Output },],
    "focus": [{ type: Output },],
    "matSlider": [{ type: ViewChild, args: ["matSlider",] },],
};
function DynamicMaterialSliderComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    DynamicMaterialSliderComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    DynamicMaterialSliderComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    DynamicMaterialSliderComponent.propDecorators;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.bindId;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.group;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.layout;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.model;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.blur;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.change;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.customEvent;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.focus;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.matSlider;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.layoutService;
    /** @type {?} */
    DynamicMaterialSliderComponent.prototype.validationService;
}
//# sourceMappingURL=dynamic-material-slider.component.js.map